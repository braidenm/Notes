package com.braidenmiller.notesapp.controllers;

import java.security.Principal;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.braidenmiller.notesapp.entities.Note;
import com.braidenmiller.notesapp.services.NoteService;

@RestController
@RequestMapping(path = "api")
@CrossOrigin({ "*", "http://localhost:4201" })
public class NotesController {

	//  S E R V I C E S
	
	@Autowired
	private NoteService noteService;
	
	// M A P P I N G S
	
	@GetMapping("notes")
	public Set<Note> index(HttpServletRequest req, HttpServletResponse res, Principal principal) {
		try {
			res.setStatus(201);
			return noteService.index(principal.getName());
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
		
	}

	@GetMapping("notes/{tid}")
	public Note show(HttpServletRequest req, Principal principal, HttpServletResponse res, @PathVariable(name="tid") int id) {
		try {
			res.setStatus(201);
			Note todo = noteService.show(principal.getName(), id);
			if(todo == null) {
				res.setStatus(404);
				return null;
			}
			return todo;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			res.setStatus(404);
			e.printStackTrace();
			return null;
		}
		
	}

	@PostMapping("notes")
	public Todo create(HttpServletRequest req, HttpServletResponse res, Principal principal,  @RequestBody Todo todo) {
		try {
			res.setStatus(201);
			return noteService.create(principal.getName(), todo);
		} catch (Exception e) {

			res.setStatus(404);
			e.printStackTrace();
			return null;
			
		}
		
		
	}

	@PutMapping("notes/{tid}")
	public Todo update(HttpServletRequest req, Principal principal, HttpServletResponse res, @PathVariable(name="tid") int id, 
						 @RequestBody Todo todo) {
		
		try {
			res.setStatus(202);
			return noteService.update(principal.getName(), id, todo);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			res.setStatus(404);
			e.printStackTrace();
			return null;
		}
		
		
	}
	@DeleteMapping("notes/{tid}")
	public void destroy(HttpServletRequest req, Principal principal, HttpServletResponse res, 
							@PathVariable(name="tid") int id) {
		
		if(noteService.destroy(principal.getName(), id)) {
			res.setStatus(202);
		}
		else {
			res.setStatus(404);
		}
	}
	
}
